name: E2E Smoke Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run smoke tests daily at 6 AM UTC
    - cron: '0 6 * * *'

jobs:
  e2e-smoke:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [22.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
    
    - name: Install Playwright Browsers
      run: npx playwright install chromium --with-deps
    
    - name: Setup Firebase Emulators
      run: |
        npm install -g firebase-tools
        mkdir -p ./test-data
        
    - name: Start Firebase Emulators
      run: |
        firebase emulators:start --only firestore,auth --project demo-test --export-on-exit=./test-data &
        # Wait for emulators to be ready
        sleep 20
        
    - name: Build Next.js application
      run: npm run build
      env:
        SKIP_ENV_VALIDATION: true
        NEXTAUTH_SECRET: test-secret-key-for-ci
        NEXTAUTH_URL: http://localhost:3000
        NEXT_PUBLIC_FIREBASE_API_KEY: test-api-key
        NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: demo-test.firebaseapp.com
        NEXT_PUBLIC_FIREBASE_PROJECT_ID: demo-test
        NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: demo-test.appspot.com
        NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: 123456789
        NEXT_PUBLIC_FIREBASE_APP_ID: test-app-id
        NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: pk_test_mock_key
        STRIPE_SECRET_KEY: sk_test_mock_key
        SENDGRID_API_KEY: test-sendgrid-key
        SMTP_EMAIL: test@example.com
        SMTP_PASS: test-password
        
    - name: Start Next.js application
      run: |
        npm start &
        # Wait for the application to be ready
        sleep 15
        curl -f http://localhost:3000 || exit 1
      env:
        PORT: 3000
        SKIP_ENV_VALIDATION: true
        NEXTAUTH_SECRET: test-secret-key-for-ci
        NEXTAUTH_URL: http://localhost:3000
        NEXT_PUBLIC_FIREBASE_API_KEY: test-api-key
        NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: demo-test.firebaseapp.com
        NEXT_PUBLIC_FIREBASE_PROJECT_ID: demo-test
        NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: demo-test.appspot.com
        NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: 123456789
        NEXT_PUBLIC_FIREBASE_APP_ID: test-app-id
        NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: pk_test_mock_key
        STRIPE_SECRET_KEY: sk_test_mock_key
        SENDGRID_API_KEY: test-sendgrid-key
        SMTP_EMAIL: test@example.com
        SMTP_PASS: test-password
        
    - name: Run Smoke Tests (Chromium only)
      run: npm run test:e2e -- --project=chromium tests/e2e/role-*.spec.ts
      env:
        CI: true
        SKIP_ENV_VALIDATION: true
        NEXTAUTH_SECRET: test-secret-key-for-ci
        NEXTAUTH_URL: http://localhost:3000
        NEXT_PUBLIC_FIREBASE_API_KEY: test-api-key
        NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: demo-test.firebaseapp.com
        NEXT_PUBLIC_FIREBASE_PROJECT_ID: demo-test
        NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: demo-test.appspot.com
        NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: 123456789
        NEXT_PUBLIC_FIREBASE_APP_ID: test-app-id
        NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: pk_test_mock_key
        STRIPE_SECRET_KEY: sk_test_mock_key
        SENDGRID_API_KEY: test-sendgrid-key
        SMTP_EMAIL: test@example.com
        SMTP_PASS: test-password
        
    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
        
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: test-results/
        retention-days: 30
        
    - name: Upload Trace on Failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-traces
        path: test-results/*/trace.zip
        retention-days: 30
        
    - name: Comment PR with Test Results
      uses: actions/github-script@v7
      if: always() && github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          // Check if test results exist
          const resultsPath = 'test-results/results.json';
          if (fs.existsSync(resultsPath)) {
            const results = JSON.parse(fs.readFileSync(resultsPath, 'utf8'));
            const passed = results.suites.reduce((acc, suite) => acc + suite.specs.filter(spec => spec.ok).length, 0);
            const failed = results.suites.reduce((acc, suite) => acc + suite.specs.filter(spec => !spec.ok).length, 0);
            const total = passed + failed;
            
            const status = failed === 0 ? '✅ All tests passed!' : `❌ ${failed} test(s) failed`;
            const summary = `## 🎭 E2E Smoke Test Results\n\n${status}\n\n**Summary:** ${passed}/${total} tests passed\n\nView full report in the [Actions tab](${context.payload.pull_request.html_url}/checks).`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });
          }