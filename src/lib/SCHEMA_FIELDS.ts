// Centralized schema field constants for type safety and lint compliance
// Add all relevant schema field names here as needed

export const SCHEMA_FIELDS = {
  // User fields
  USER: {
    USER_ID: 'userId',
    EMAIL: 'email',
    DISPLAY_NAME: 'displayName',
    CREATED_AT: SCHEMA_FIELDS.USER.CREATED_AT,
    UPDATED_AT: SCHEMA_FIELDS.USER.UPDATED_AT,
    ROLE: SCHEMA_FIELDS.USER.ROLE,
    XP: SCHEMA_FIELDS.USER.XP,
    VERIFICATION: 'verification',
    RANK: 'rank',
    BADGES: 'badges',
    CHALLENGES: 'challenges',
    AVERAGE_RATING: SCHEMA_FIELDS.USER.AVERAGE_RATING,
  },

  // Service fields
  SERVICE: {
    CREATOR_ID: SCHEMA_FIELDS.SERVICE.CREATOR_ID,
    SERVICE_ID: SCHEMA_FIELDS.BOOKING.SERVICE_ID,
    TITLE: SCHEMA_FIELDS.BOOKING.TITLE,
    DESCRIPTION: SCHEMA_FIELDS.SERVICE.DESCRIPTION,
    CATEGORY: SCHEMA_FIELDS.SERVICE.CATEGORY,
    PRICE: SCHEMA_FIELDS.SERVICE.PRICE,
    DURATION: SCHEMA_FIELDS.SERVICE.DURATION,
    STATUS: SCHEMA_FIELDS.BOOKING.STATUS,
    CREATED_AT: SCHEMA_FIELDS.USER.CREATED_AT,
    UPDATED_AT: SCHEMA_FIELDS.USER.UPDATED_AT,
  },

  // Booking fields
  BOOKING: {
    STATUS: SCHEMA_FIELDS.BOOKING.STATUS,
    BOOKING_ID: SCHEMA_FIELDS.REVIEW.BOOKING_ID,
    PROVIDER_ID: SCHEMA_FIELDS.BOOKING.PROVIDER_ID,
    CLIENT_ID: SCHEMA_FIELDS.BOOKING.CLIENT_ID,
    AMOUNT: 'amount',
    EARNINGS: 'earnings',
    CREATED_AT: SCHEMA_FIELDS.USER.CREATED_AT,
    UPDATED_AT: SCHEMA_FIELDS.USER.UPDATED_AT,
    SERVICE_ID: SCHEMA_FIELDS.BOOKING.SERVICE_ID,
    TITLE: SCHEMA_FIELDS.BOOKING.TITLE,
  },

  // Review fields
  REVIEW: {
    BOOKING_ID: SCHEMA_FIELDS.REVIEW.BOOKING_ID,
    RATING: SCHEMA_FIELDS.REVIEW.RATING,
    COMMENT: 'comment',
    CREATED_AT: SCHEMA_FIELDS.USER.CREATED_AT,
  },

  // Notification fields
  NOTIFICATION: {
    USER_ID: SCHEMA_FIELDS.NOTIFICATION.USER_ID,
    TYPE: SCHEMA_FIELDS.NOTIFICATION.TYPE,
    MESSAGE: SCHEMA_FIELDS.NOTIFICATION.MESSAGE,
    READ: SCHEMA_FIELDS.NOTIFICATION.READ,
    CREATED_AT: SCHEMA_FIELDS.USER.CREATED_AT,
  },

  // Booking Request fields
  BOOKING_REQUEST: {
    CLIENT_ID: SCHEMA_FIELDS.BOOKING.CLIENT_ID,
    PROVIDER_ID: SCHEMA_FIELDS.BOOKING.PROVIDER_ID,
    SERVICE_ID: SCHEMA_FIELDS.BOOKING.SERVICE_ID,
    STATUS: SCHEMA_FIELDS.BOOKING.STATUS,
    MESSAGE: SCHEMA_FIELDS.NOTIFICATION.MESSAGE,
    PRICE: SCHEMA_FIELDS.SERVICE.PRICE,
    DURATION: SCHEMA_FIELDS.SERVICE.DURATION,
    CREATED_AT: SCHEMA_FIELDS.USER.CREATED_AT,
    UPDATED_AT: SCHEMA_FIELDS.USER.UPDATED_AT,
  },

  // XP Transaction fields
  XP_TRANSACTION: {
    EVENT: SCHEMA_FIELDS.XP_TRANSACTION.EVENT,
    XP_AMOUNT: SCHEMA_FIELDS.XP_TRANSACTION.XP_AMOUNT,
    USER_ID: SCHEMA_FIELDS.NOTIFICATION.USER_ID,
    CREATED_AT: SCHEMA_FIELDS.USER.CREATED_AT,
  },

  // Escrow fields
  ESCROW: {
    PROVIDER_ID: SCHEMA_FIELDS.BOOKING.PROVIDER_ID,
    CUSTOMER_ID: 'customerId',
    CREATED_AT: SCHEMA_FIELDS.USER.CREATED_AT,
    UPDATED_AT: SCHEMA_FIELDS.USER.UPDATED_AT,
    STATUS: SCHEMA_FIELDS.BOOKING.STATUS,
    AMOUNT: 'amount',
  },

  // Mentorship Booking fields
  MENTORSHIP_BOOKING: {
    CLIENT_UID: 'clientUid',
    CREATOR_UID: 'creatorUid',
    STATUS: SCHEMA_FIELDS.BOOKING.STATUS,
    CREATED_AT: SCHEMA_FIELDS.USER.CREATED_AT,
    UPDATED_AT: SCHEMA_FIELDS.USER.UPDATED_AT,
  },

  // User Progress fields
  USER_PROGRESS: {
    TOTAL_XP: 'totalXp',
    WEEKLY_XP: 'weeklyXp',
    MONTHLY_XP: 'monthlyXp',
    CURRENT_STREAK: 'currentStreak',
    LONGEST_STREAK: 'longestStreak',
    CHALLENGES_COMPLETED: 'challengesCompleted',
    BADGES_EARNED: 'badgesEarned',
    LEVEL: 'level',
    RANK: 'rank',
  },

  // Common fields
  SEASON: 'season',
  AMOUNT: 'amount',
  EARNINGS: 'earnings',
  BADGES: 'badges',
  VERIFICATION: 'verification',
  RANK: 'rank',
  CHALLENGES: 'challenges',
  EVENT_TYPE: 'eventType',
};
