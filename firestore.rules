rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ✅ Applications (verification)
    match /applications/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // ✅ Saved Filters – must store userId
    match /savedFilters/{docId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // ✅ Reviews – booking-based review system
    match /reviews/{bookingId} {
      allow read: if true;
      allow create: if request.auth != null &&
        request.auth.uid == request.resource.data.clientUid &&
        // Prevent duplicate reviews for same booking
        !exists(/databases/$(database)/documents/reviews/$(bookingId));
      allow update: if false; // Reviews cannot be updated once created
      allow delete: if false; // Reviews cannot be deleted
    }

    // ✅ Booking Requests – user owns via buyerId
    match /bookingRequests/{docId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.buyerId;
      allow write: if false;
    }

    // ✅ Services
    match /services/{serviceId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null && request.auth.uid == resource.data.creatorId;
    }

    // ✅ User Profiles & Subcollections
    match /users/{userId} {
      allow read: if true;
      allow write: if (request.auth.uid == userId || request.auth.token.admin == true)
        && !('tier' in request.resource.data.diff(resource.data))
        && !('xp' in request.resource.data.diff(resource.data))
        && !('rankScore' in request.resource.data.diff(resource.data))
        && !('lateDeliveries' in request.resource.data.diff(resource.data))
        && !('tierFrozen' in request.resource.data.diff(resource.data));

      match /activities/{activityId} {
        allow create: if request.auth.uid == userId;
        allow read: if request.auth.uid == userId || request.auth.token.admin == true;
      }
    }

    // ✅ Bookings
    match /bookings/{bookingId} {
      allow read, write: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;

      match /messages/{messageId} {
        allow read, write: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
      }
    }

    // ✅ Booking Chat System
    match /chats/{bookingId}/messages/{messageId} {
      allow read, write: if request.auth != null &&
        (request.auth.uid == resource.data.senderUid ||
         request.auth.uid == get(/databases/$(database)/documents/bookings/$(bookingId)).data.clientUid ||
         request.auth.uid == get(/databases/$(database)/documents/bookings/$(bookingId)).data.providerUid);
    }

    // ✅ Disputes
    match /disputes/{disputeId} {
      allow create: if request.auth != null;
      allow read, update: if request.auth.uid in [resource.data.clientId, resource.data.providerId];
      allow delete: if false;
    }

    // ✅ Contracts – use clientId/providerId
    match /contracts/{contractId} {
      allow read, write: if request.auth.uid in [resource.data.clientId, resource.data.providerId];
    }

    // ✅ Activity Logs
    match /activityLogs/{userId} {
      allow create: if request.auth.uid == userId;
      allow read: if request.auth.token.admin == true;
    }

    // ✅ Notifications
    match /notifications/{userId} {
      allow read, create: if request.auth.uid == userId;
    }

    // ✅ Reports
    match /reports/{id} {
      allow create: if request.auth != null;
      allow read, update: if request.auth.token.admin == true;
    }

    // ✅ Admin Pages / Roles
    match /admin/{docId} {
      allow read, write: if request.auth.token.admin == true;
    }

    match /adminOnly/{doc} {
      allow read, write: if request.auth.token.admin == true;
    }

    // ✅ Default Deny All
    match /{document=**} {
      allow read: if false;
    }
  }
}
