rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Allow read-only access to public services (explore, etc)
    match /services/{serviceId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null && request.auth.uid == resource.data.creatorId;
    }

    // Users profiles
    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update, delete: if request.auth != null && request.auth.uid == userId;
    }

    // Messages (chat between users)
    match /messages/{messageId} {
      allow create, read: if request.auth != null;
      allow update, delete: if false;
    }

    // Bookings
    match /bookings/{bookingId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow update: if request.auth != null && request.resource.data.status in ['pending', 'accepted'] && request.auth.uid in [resource.data.clientId, resource.data.providerId];
      allow delete: if false;
    }

    // Reviews
    match /reviews/{reviewId} {
      allow create: if request.auth != null;
      allow read: if true;
      allow update, delete: if false;
    }

    // Disputes
    match /disputes/{disputeId} {
      allow create: if request.auth != null;
      allow read, update: if request.auth != null && (request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId);
      allow delete: if false;
    }

    // Activity Logs (only Admins read, users write their own logs)
    match /activityLogs/{userId} {
      allow create: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && request.auth.token.admin == true;
      allow update, delete: if false;
    }

    // Notifications
    match /notifications/{userId} {
      allow read, create: if request.auth != null && request.auth.uid == userId;
      allow update, delete: if false;
    }

  }
}
