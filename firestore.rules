rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Public services (explore, etc)
    match /services/{serviceId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null && request.auth.uid == resource.data.creatorId;
    }

    // User profiles
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth.uid == userId || request.auth.token.admin == true;

      match /activities/{activityId} {
        allow create: if request.auth.uid == userId;
        allow read: if request.auth.uid == userId || request.auth.token.admin == true;
      }
    }

    // Bookings
    match /bookings/{bookingId} {
      allow read, write: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
      match /messages/{messageId} {
        allow read, write: if request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.providerId;
      }
    }

    // Reviews
    match /reviews/{reviewId} {
      allow create: if request.auth != null;
      allow read: if true;
      allow update, delete: if false;
    }

    // Disputes
    match /disputes/{disputeId} {
      allow create: if request.auth != null;
      allow read, update: if request.auth != null 
        && request.auth.uid in [resource.data.clientId, resource.data.providerId];
      allow delete: if false;
    }

    // Contracts
    match /contracts/{contractId} {
      allow read, write: if request.auth != null 
        && request.auth.uid in [resource.data.clientId, resource.data.providerId];
    }

    // Logs
    match /activityLogs/{userId} {
      allow create: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && request.auth.token.admin == true;
    }

    // Notifications
    match /notifications/{userId} {
      allow read, create: if request.auth != null && request.auth.uid == userId;
    }

    // Optional Admin Data
    match /admin/{docId} {
      allow read, write: if request.auth.token.admin == true;
    }

    // Admin only collection for managing roles/verification
    match /adminOnly/{doc} {
      allow read, write: if request.auth.token.admin == true;
    }

    // âœ… FIXED: Fallback match must be here inside the root document match
    match /{document=**} {
      allow read: if false;
    }
  }
}
